.loop(@i) when (@i > 0) {
  .loop((@i - 1)); // 递归调用自身

  @n: @i*5;
  @m: @i*25;

  .w@{n} {
    width: (1px * @n) !important;
  }

  .h@{n} {
    height: (1px * @n) !important;
  }

  .w@{m} {
    width: (1px * @m) !important;
  }

  .h@{m} {
    height: (1px * @m) !important;
  }

  // margin
  .m@{n} {
    margin: (1px * @n) !important;
  }

  .mt@{n} {
    margin-top: (1px * @n) !important;
  }

  .mb@{n} {
    margin-bottom: (1px * @n) !important;
  }

  .ml@{n} {
    margin-left: (1px * @n) !important;
  }

  .mr@{n} {
    margin-right: (1px * @n) !important;
  }

  // margin-vh
  .m@{n}vh {
    margin: (1vh * @n) !important;
  }

  .mt@{n}vh {
    margin-top: (1vh * @n) !important;
  }

  .mb@{n}vh {
    margin-bottom: (1vh * @n) !important;
  }

  .ml@{n}vh {
    margin-left: (1vh * @n) !important;
  }

  .mr@{n}vh {
    margin-right: (1vh * @n) !important;
  }

  // margin-vw
  .m@{n}vw {
    margin: (1vw * @n) !important;
  }

  .mt@{n}vw {
    margin-top: (1vw * @n) !important;
  }

  .mb@{n}vw {
    margin-bottom: (1vw * @n) !important;
  }

  .ml@{n}vw {
    margin-left: (1vw * @n) !important;
  }

  .mr@{n}vw {
    margin-right: (1vw * @n) !important;
  }

  // margin-vm
  .m@{n}vm {
    margin: (1vmin * @n) !important;
  }

  .mt@{n}vm {
    margin-top: (1vmin * @n) !important;
  }

  .mb@{n}vm {
    margin-bottom: (1vmin * @n) !important;
  }

  .ml@{n}vm {
    margin-left: (1vmin * @n) !important;
  }

  .mr@{n}vm {
    margin-right: (1vmin * @n) !important;
  }

  // padding
  .p@{n} {
    padding: (1px * @n) !important;
  }

  .pt@{n} {
    padding-top: (1px * @n) !important;
  }

  .pb@{n} {
    padding-bottom: (1px * @n) !important;
  }

  .pl@{n} {
    padding-left: (1px * @n) !important;
  }

  .pr@{n} {
    padding-right: (1px * @n) !important;
  }

  // padding-vh
  .p@{n}vh {
    padding: (1vh * @n) !important;
  }

  .pt@{n}vh {
    padding-top: (1vh * @n) !important;
  }

  .pb@{n}vh {
    padding-bottom: (1vh * @n) !important;
  }

  .pl@{n}vh {
    padding-left: (1vh * @n) !important;
  }

  .pr@{n}vh {
    padding-right: (1vh * @n) !important;
  }

  // padding-vw
  .p@{n}vw {
    padding: (1vw * @n) !important;
  }

  .pt@{n}vw {
    padding-top: (1vw * @n) !important;
  }

  .pb@{n}vw {
    padding-bottom: (1vw * @n) !important;
  }

  .pl@{n}vw {
    padding-left: (1vw * @n) !important;
  }

  .pr@{n}vw {
    padding-right: (1vw * @n) !important;
  }

  // padding-vm
  .p@{n}vm {
    padding: (1vmin * @n) !important;
  }

  .pt@{n}vm {
    padding-top: (1vmin * @n) !important;
  }

  .pb@{n}vm {
    padding-bottom: (1vmin * @n) !important;
  }

  .pl@{n}vm {
    padding-left: (1vmin * @n) !important;
  }

  .pr@{n}vm {
    padding-right: (1vmin * @n) !important;
  }
}

.loopPaddingAndMargin(@i) when (@i >= 0) {
  .loopPaddingAndMargin((@i - 1));

  @gap: @i * 4px;
  @n: @i * 4;
  @f: @i * 2 + 12;

  // margin
  .m@{n} {
    margin: @gap !important;
  }

  .mt@{n} {
    margin-top: @gap !important;
  }

  .mb@{n} {
    margin-bottom: @gap !important;
  }

  .ml@{n} {
    margin-left: @gap !important;
  }

  .mr@{n} {
    margin-right: @gap !important;
  }

  // padding
  .p@{n} {
    padding: @gap !important;
  }

  .pt@{n} {
    padding-top: @gap !important;
  }

  .pb@{n} {
    padding-bottom: @gap !important;
  }

  .pl@{n} {
    padding-left: @gap !important;
  }

  .pr@{n} {
    padding-right: @gap !important;
  }

  .f@{f} {
    font-size: @f * 1px !important;
  }
}

.loop(10);

.loopPaddingAndMargin(6);
